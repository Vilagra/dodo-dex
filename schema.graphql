type ZooFactory @entity {
    id: ID!
    pairCount: Int!
}

type Token @entity {
    # token address
    id: ID!
    # mirrored from the smart contract
    symbol: String!
    name: String!
    decimals: BigInt!
}

type DODOPair @entity {
    # pair address
    id: ID!

    # mirrored from the smart contract
    baseToken: Token!
    quoteToken: Token!
}

type Trade @entity {
    id: ID!

    dodoPair: DODOPair
    baseBuy: BigDecimal!
    baseSell: BigDecimal!
    quoteBuy: BigDecimal!
    quoteSell: BigDecimal!
}

type Deposit @entity {
    id: ID!

    dodoPair: DODOPair
    deposited: Token
    payer: Bytes
    receiver: Bytes
    amount: BigDecimal!
    lpTokenAmount: BigDecimal!
}

type Withdraw @entity {
    id: ID!

    dodoPair: DODOPair
    deposited: Token
    payer: Bytes
    receiver: Bytes
    amount: BigDecimal!
    lpTokenAmount: BigDecimal!
}
   